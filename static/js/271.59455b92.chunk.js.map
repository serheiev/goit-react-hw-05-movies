{"version":3,"file":"static/js/271.59455b92.chunk.js","mappings":"wQACA,GAAgB,QAAU,4BAA4B,KAAO,yBAAyB,MAAQ,0BAA0B,IAAM,yB,SCsE9H,EAhEmB,WAAO,IAAD,EACvB,GAA4BA,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAAsCF,EAAAA,EAAAA,UAAS,IAA/C,eAAOG,EAAP,KAAoBC,EAApB,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,MAAnC,eAAOK,EAAP,KAAcC,EAAd,KACA,GAAkCN,EAAAA,EAAAA,WAAS,GAA3C,eAAOO,EAAP,KAAkBC,EAAlB,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAK,UAAGF,EAAaG,IAAI,sBAApB,QAAsC,GAC3CC,EAAa,gCAkCnB,OApBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,mCAAG,WAAMJ,GAAN,uFAEdJ,GAAa,GAFC,UAGOS,EAAAA,EAAAA,IAAmBL,GAH1B,UAIQ,KADhBX,EAHQ,QAIHiB,OAJG,sBAKN,IAAIC,MAAML,GALJ,OAOdZ,EAAUD,GAPI,kDASdK,EAASQ,GATK,yBAWdN,GAAa,GAXC,6EAAH,sDAcXI,GACFI,EAAUJ,EAEb,GAAE,CAACA,KAGF,qBAASQ,UAAWC,EAAAA,QAApB,WACE,iBAAMD,UAAWC,EAAAA,KAAYC,SAlCR,SAAAC,GAKvB,OAJAA,EAAEC,iBACFb,EAAgB,CAAER,YAAAA,IAClBD,EAAU,IACVI,EAAS,MACFM,CACR,EA4BG,UACE,mBAAOQ,UAAWC,EAAAA,MAAlB,WACE,kBACED,UAAWC,EAAAA,MACXI,KAAK,OACLC,YAAY,gBACZC,MAAOxB,EACPyB,SAjCM,SAAAL,GACdnB,EAAemB,EAAEM,OAAOF,MACzB,KAiCO,mBAAQP,UAAWC,EAAAA,IAAWI,KAAK,SAAnC,yBAKHpB,IAAS,uBAAIS,IACbP,IAAa,SAACuB,EAAA,EAAD,IACb7B,EAAOiB,OAAS,IAAK,SAACa,EAAA,EAAD,CAAY9B,OAAQA,MAG/C,C,4ECpED,GAAgB,UAAY,6BAA6B,UAAY,8B,SCGxD8B,EAAa,SAAC,GAAgB,IAAd9B,EAAa,EAAbA,OACrB+B,GAAWC,EAAAA,EAAAA,MACjB,OACE,eAAIb,UAAWC,EAAAA,UAAf,SACGpB,EAAOiC,KAAI,SAAAC,GAAI,OACd,eAAIf,UAAWC,EAAAA,UAAf,UACE,SAAC,KAAD,CACED,UAAWC,EAAAA,UACXe,GAAE,kBAAaD,EAAKE,IACpBC,MAAO,CAAEC,KAAMP,GAHjB,UAKE,cAAGZ,UAAWC,EAAAA,SAAd,SAA+Bc,EAAKK,WANHL,EAAKE,GAD5B,KAarB,C,8LCpBKI,EAAM,mCACZC,EAAAA,GAAAA,SAAAA,QAAyB,+BAElB,IAAMC,EAAgB,mCAAG,oGACPD,EAAAA,GAAAA,IAAA,sBAAiC,CACtDE,OAAQ,CACNC,QAASJ,KAHiB,cACxBK,EADwB,gBAMjBA,EAASX,KAAKY,QANG,mFAAH,qDAQhB9B,EAAkB,mCAAG,WAAML,GAAN,uFACT8B,EAAAA,GAAAA,IAAU,eAAgB,CAC/CE,OAAQ,CACNC,QAASJ,EACT7B,MAAAA,KAJ4B,cAC1BkC,EAD0B,yBAQzBA,EAASX,KAAKY,SARW,2CAAH,sDAWlBC,EAAc,mCAAG,WAAMC,GAAN,wFACLP,EAAAA,EAAAA,IAAM,SAAD,OAAUO,GAAW,CAC/CL,OAAQ,CAAEC,QAASJ,KAFO,cACtBK,EADsB,yBAKrBA,EAASX,MALY,2CAAH,sDAQde,EAAc,mCAAG,WAAMD,GAAN,wFACLP,EAAAA,EAAAA,IAAM,SAAD,OAAUO,EAAV,YAA6B,CACvDL,OAAQ,CAAEC,QAASJ,KAFO,cACtBK,EADsB,yBAKrBA,EAASX,KAAKgB,MALO,2CAAH,sDAQdC,EAAgB,mCAAG,WAAMH,GAAN,wFACPP,EAAAA,EAAAA,IAAM,SAAD,OAAUO,EAAV,YAA6B,CACvDL,OAAQ,CAAEC,QAASJ,KAFS,cACxBK,EADwB,yBAKvBA,EAASX,KAAKY,SALS,2CAAH,qD","sources":["webpack://react-homework-template/./src/Pages/SearchPage/SearchPage.module.scss?2e56","Pages/SearchPage/SearchPage.jsx","webpack://react-homework-template/./src/components/MoviesList/MovieList.module.scss?986d","components/MoviesList/MoviesList.jsx","fetchApi/fetchApi.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"section\":\"SearchPage_section__mSt1f\",\"form\":\"SearchPage_form__-Jry+\",\"input\":\"SearchPage_input__76jUa\",\"btn\":\"SearchPage_btn__Hksd0\"};","import { useState, useEffect } from 'react';\nimport { fetchMoviesByQuery } from 'fetchApi/fetchApi';\nimport { useSearchParams } from 'react-router-dom';\nimport { MoviesList } from 'components/MoviesList/MoviesList';\nimport { Loader } from 'components/Loader/Loader';\nimport style from './SearchPage.module.scss';\n\nconst SearchPage = () => {\n  const [movies, setMovies] = useState([]);\n  const [searchQuery, setSearchQuery] = useState('');\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('searchQuery') ?? '';\n  const errMessage = 'Sorry, no films by your query';\n\n  const hendleFormSubmit = e => {\n    e.preventDefault();\n    setSearchParams({ searchQuery });\n    setMovies([]);\n    setError(null);\n    return query;\n  };\n\n  const onInput = e => {\n    setSearchQuery(e.target.value);\n  };\n\n  useEffect(() => {\n    const getMovies = async query => {\n      try {\n        setIsLoading(true);\n        const movies = await fetchMoviesByQuery(query);\n        if (movies.length === 0) {\n          throw new Error(errMessage);\n        }\n        setMovies(movies);\n      } catch {\n        setError(errMessage);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    if (query) {\n      getMovies(query);\n    }\n  }, [query]);\n\n  return (\n    <section className={style.section}>\n      <form className={style.form} onSubmit={hendleFormSubmit}>\n        <label className={style.label}>\n          <input\n            className={style.input}\n            type=\"text\"\n            placeholder=\"Search movies\"\n            value={searchQuery}\n            onChange={onInput}\n          />\n          <button className={style.btn} type=\"submit\">\n            Search\n          </button>\n        </label>\n      </form>\n      {error && <p>{errMessage}</p>}\n      {isLoading && <Loader />}\n      {movies.length > 0 && <MoviesList movies={movies} />}\n    </section>\n  );\n};\n\nexport default SearchPage;\n","// extracted by mini-css-extract-plugin\nexport default {\"movieItem\":\"MovieList_movieItem__K6bLl\",\"movieLink\":\"MovieList_movieLink__kSKFa\"};","import { Link, useLocation } from 'react-router-dom';\nimport { PropTypes } from 'prop-types';\nimport style from './MovieList.module.scss';\n\nexport const MoviesList = ({ movies }) => {\n  const location = useLocation();\n  return (\n    <ul className={style.movieList}>\n      {movies.map(data => (\n        <li className={style.movieItem} key={data.id}>\n          <Link\n            className={style.movieLink}\n            to={`/movies/${data.id}`}\n            state={{ from: location }}\n          >\n            <p className={style.moviePar}>{data.title}</p>\n          </Link>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nMoviesList.propTypes = {\n  movies: PropTypes.array.isRequired,\n};\n","import axios from 'axios';\nconst KEY = 'c220bc7b4cb21e29de30191d135b55c8';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport const fetchTrendMovies = async () => {\n  const response = await axios.get(`/trending/movie/day`, {\n    params: {\n      api_key: KEY,\n    },\n  });\n  return await response.data.results;\n};\nexport const fetchMoviesByQuery = async query => {\n  const response = await axios.get('search/movie', {\n    params: {\n      api_key: KEY,\n      query,\n    },\n  });\n\n  return response.data.results;\n};\n\nexport const fetchMovieById = async movieId => {\n  const response = await axios(`movie/${movieId}`, {\n    params: { api_key: KEY },\n  });\n\n  return response.data;\n};\n\nexport const fetchMovieCast = async movieId => {\n  const response = await axios(`movie/${movieId}/credits`, {\n    params: { api_key: KEY },\n  });\n\n  return response.data.cast;\n};\n\nexport const fetchMovieReview = async movieId => {\n  const response = await axios(`movie/${movieId}/reviews`, {\n    params: { api_key: KEY },\n  });\n\n  return response.data.results;\n};\n// apiKey = c220bc7b4cb21e29de30191d135b55c8\n"],"names":["useState","movies","setMovies","searchQuery","setSearchQuery","error","setError","isLoading","setIsLoading","useSearchParams","searchParams","setSearchParams","query","get","errMessage","useEffect","getMovies","fetchMoviesByQuery","length","Error","className","style","onSubmit","e","preventDefault","type","placeholder","value","onChange","target","Loader","MoviesList","location","useLocation","map","data","to","id","state","from","title","KEY","axios","fetchTrendMovies","params","api_key","response","results","fetchMovieById","movieId","fetchMovieCast","cast","fetchMovieReview"],"sourceRoot":""}