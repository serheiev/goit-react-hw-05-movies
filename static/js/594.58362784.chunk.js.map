{"version":3,"file":"static/js/594.58362784.chunk.js","mappings":"+PACA,EAA6B,iCAA7B,EAA2E,iCAA3E,EAAwH,gC,SCmDxH,EA9CqB,WACnB,OAA0BA,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAAkCJ,EAAAA,EAAAA,WAAS,GAA3C,eAAOK,EAAP,KAAkBC,EAAlB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QACFE,EAAa,oBAiBnB,OAfAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAW,mCAAG,oGAEhBL,GAAa,GAFG,UAGQM,EAAAA,EAAAA,IAAiBL,GAHzB,OAGVM,EAHU,OAIhBX,EAASW,GAJO,gDAMhBT,EAASK,GANO,yBAQhBH,GAAa,GARG,4EAAH,qDAWjBK,GACD,GAAE,CAACJ,KAGF,gCACGJ,IAAS,uBAAIM,IACbJ,IAAa,SAACS,EAAA,EAAD,IAEbb,EAAMc,QACL,eAAIC,UAAWC,EAAf,SACGhB,EAAMiB,KAAI,SAAAC,GAAE,OACX,gBAAIH,UAAWC,EAAf,WACE,eAAGD,UAAWC,EAAd,WACE,sCACCE,EAAGC,WAEN,cAAGJ,UAAWC,EAAd,SAAgCE,EAAGE,YALCF,EAAGG,GAD9B,OAWf,cAAGN,UAAWC,EAAd,SAAgCR,MAIvC,C,8LCjDKc,EAAM,mCACZC,EAAAA,GAAAA,SAAAA,QAAyB,+BAElB,IAAMC,EAAgB,mCAAG,oGACPD,EAAAA,GAAAA,IAAA,sBAAiC,CACtDE,OAAQ,CACNC,QAASJ,KAHiB,cACxBK,EADwB,gBAMjBA,EAASC,KAAKC,QANG,mFAAH,qDAQhBC,EAAkB,mCAAG,WAAMC,GAAN,uFACTR,EAAAA,GAAAA,IAAU,eAAgB,CAC/CE,OAAQ,CACNC,QAASJ,EACTS,MAAAA,KAJ4B,cAC1BJ,EAD0B,yBAQzBA,EAASC,KAAKC,SARW,2CAAH,sDAWlBG,EAAc,mCAAG,WAAM1B,GAAN,wFACLiB,EAAAA,EAAAA,IAAM,SAAD,OAAUjB,GAAW,CAC/CmB,OAAQ,CAAEC,QAASJ,KAFO,cACtBK,EADsB,yBAKrBA,EAASC,MALY,2CAAH,sDAQdK,EAAc,mCAAG,WAAM3B,GAAN,wFACLiB,EAAAA,EAAAA,IAAM,SAAD,OAAUjB,EAAV,YAA6B,CACvDmB,OAAQ,CAAEC,QAASJ,KAFO,cACtBK,EADsB,yBAKrBA,EAASC,KAAKM,MALO,2CAAH,sDAQdvB,EAAgB,mCAAG,WAAML,GAAN,wFACPiB,EAAAA,EAAAA,IAAM,SAAD,OAAUjB,EAAV,YAA6B,CACvDmB,OAAQ,CAAEC,QAASJ,KAFS,cACxBK,EADwB,yBAKvBA,EAASC,KAAKC,SALS,2CAAH,qD","sources":["webpack://react-homework-template/./src/components/MovieReviews/MovieReviews.module.scss?2f6c","components/MovieReviews/MovieReviews.jsx","fetchApi/fetchApi.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"reviewList\":\"MovieReviews_reviewList__D-X6x\",\"reviewItem\":\"MovieReviews_reviewItem__pjuwI\",\"reviewPar\":\"MovieReviews_reviewPar__tIMvG\"};","import { Loader } from 'components/Loader/Loader';\nimport { fetchMovieReview } from 'fetchApi/fetchApi';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport style from './MovieReviews.module.scss';\n\nconst MovieReviews = () => {\n  const [movie, setMovie] = useState([]);\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const { movieId } = useParams();\n  const errMessage = 'Sorry, no reviews';\n\n  useEffect(() => {\n    const fetchMovies = async () => {\n      try {\n        setIsLoading(true);\n        const movieById = await fetchMovieReview(movieId);\n        setMovie(movieById);\n      } catch {\n        setError(errMessage);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchMovies();\n  }, [movieId]);\n\n  return (\n    <>\n      {error && <p>{errMessage}</p>}\n      {isLoading && <Loader />}\n\n      {movie.length ? (\n        <ul className={style.reviewList}>\n          {movie.map(el => (\n            <li className={style.reviewItem} key={el.id}>\n              <p className={style.reviewPar}>\n                <span>Author:</span>\n                {el.author}\n              </p>\n              <p className={style.reviewPar}>{el.content}</p>\n            </li>\n          ))}\n        </ul>\n      ) : (\n        <p className={style.reviewPar}>{errMessage}</p>\n      )}\n    </>\n  );\n};\n\nexport default MovieReviews;\n","import axios from 'axios';\nconst KEY = 'c220bc7b4cb21e29de30191d135b55c8';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport const fetchTrendMovies = async () => {\n  const response = await axios.get(`/trending/movie/day`, {\n    params: {\n      api_key: KEY,\n    },\n  });\n  return await response.data.results;\n};\nexport const fetchMoviesByQuery = async query => {\n  const response = await axios.get('search/movie', {\n    params: {\n      api_key: KEY,\n      query,\n    },\n  });\n\n  return response.data.results;\n};\n\nexport const fetchMovieById = async movieId => {\n  const response = await axios(`movie/${movieId}`, {\n    params: { api_key: KEY },\n  });\n\n  return response.data;\n};\n\nexport const fetchMovieCast = async movieId => {\n  const response = await axios(`movie/${movieId}/credits`, {\n    params: { api_key: KEY },\n  });\n\n  return response.data.cast;\n};\n\nexport const fetchMovieReview = async movieId => {\n  const response = await axios(`movie/${movieId}/reviews`, {\n    params: { api_key: KEY },\n  });\n\n  return response.data.results;\n};\n// apiKey = c220bc7b4cb21e29de30191d135b55c8\n"],"names":["useState","movie","setMovie","error","setError","isLoading","setIsLoading","movieId","useParams","errMessage","useEffect","fetchMovies","fetchMovieReview","movieById","Loader","length","className","style","map","el","author","content","id","KEY","axios","fetchTrendMovies","params","api_key","response","data","results","fetchMoviesByQuery","query","fetchMovieById","fetchMovieCast","cast"],"sourceRoot":""}